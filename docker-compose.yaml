version: '3'
  
services:
  zookeeper:
    image: "confluentinc/cp-zookeeper:${CONF_VER}"
    container_name: zookeeper
    ports:
      - 22181:2181
    environment:
      TZ: ${TZ_IND}
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: "confluentinc/cp-enterprise-kafka:${CONF_VER}"
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
    # Exposes 9092 for external connections to the broker
    # Use kafka:29092 for connections internal on the docker network
    # See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
      - '29092:29092'
    environment:
      TZ: ${TZ_IND}
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_LISTENERS: SSL://kafka:29092
      KAFKA_SSL_KEYSTORE_FILENAME: server.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: creds
      KAFKA_SSL_KEY_CREDENTIALS: creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: server.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: creds
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: " "
      KAFKA_SSL_CLIENT_AUTH: requested
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SSL
      KAFKA_LOG4J_LOGGERS: "kafka.controller=DEBUG,kafka.producer.async.DefaultEventHandler=DEBUG,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_SUPER_USERS: 'User:CN=localhost'
      AUTO_CREATE_TOPICS: true
      KAFKA_CREATE_TOPICS: "test-topic:1:1"
    volumes:
      - ./secrets/server:/etc/kafka/secrets

  producer:
    build: 
      context: ./producer
    container_name: producer
    volumes:
      - ./secrets/client:/etc/kafka/secrets
    depends_on:
      - kafka

  consumer:
    build:
      context: ./consumer
    container_name: consumer
    volumes:
      - ./secrets/client:/etc/kafka/secrets
    depends_on:
      - kafka

